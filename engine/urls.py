from django.conf.urls import url
from django.conf.urls.static import static
from . import views
from django.conf import settings
urlpatterns = [
    url(r'^updateuser', views.UpdateUser, name='UpdateUser'),
    url(r'^renderiframe/$', views.Iframe, name='Iframe'),
    url(r'^query/$', views.Querys, name='Query'),
    url(r'^$', views.Index, name='Index'),
    url(r'^cancelbutton', views.Cancel, name='Cancel'),
    url(r'^queryfeedback/(?P<query_id>[0-9]+)/(?P<user_id>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/like$',views.QueryFeedbackLike),
    url(r'^queryfeedback/(?P<query_id>[0-9]+)/(?P<user_id>[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12})/dislike$',views.QueryFeedbackDislike),
    url(r'^analytics$',views.Analytics),
    url(r'^getanalysis',views.GetAnalysis),
    url(r'^report/(?P<from_date>[0-9][0-9]\/[0-9][0-9]\/[0-9][0-9][0-9][0-9])/(?P<to_date>[0-9][0-9]\/[0-9][0-9]\/[0-9][0-9][0-9][0-9])/$',views.Report),
    url(r'^pcid', views.GetPcId),
    url(r'^testchatbot', views.TestChatbot),
    url(r'^intenttesting', views.TestChatbotIntent),
    url(r'^mappertesting', views.TestChatbotMapper),
    url(r'^getPolicyDtls', views.GetPolicyDtls),
    url(r'^getAllPolicyDtls', views.GetAllPolicyDtls),
    url(r'^sendPPC', views.SendPPC),
    url(r'IToS', views.IToS),
    url(r'chatbot_test',views.ChatbotTest),
    url(r'submitqueries',views.SubmitQueries),
    url(r'chat_testing/(?P<intent_id>[0-9]+)',views.ChatTesting),
    url(r'getsentences', views.GetSentences),
    url(r'savesentences', views.SaveSentences),
    url(r'runtests', views.RunTests),
    url(r'testintent', views.TestIntent),
    url(r'getPPC', views.GetPpc),
    url(r'failedexport', views.FailedExport),
    url(r'passedexport', views.PassedExport),
    url(r'export', views.Export),
    url(r'saveLeadData', views.SaveLeadData),
    url(r'^queryfacebook', views.FacebookView),
    url(r'^queryalexa', views.AlexaView),
    url(r'^querygooglehome', views.GoogleHomeView), 
    url(r'^deleteEntries', views.DeleteEntries),
    url(r'^accountnumbersoauth', views.AccountNumbersOauth),    
    url(r'^accountnumbers', views.AccountNumbers),
    url(r'^elecbill', views.ElecBill),
    url(r'^gasbill', views.GasBill),
    url(r'^getbalance', views.GetBalance),
    url(r'^rechargemobile', views.RechargeMobile),
    url(r'^save_choice', views.SaveChoice),
    url(r'^creditcardnumbers', views.CreditCardNumbers),
    url(r'^creditcarddateamount', views.CreditCardDateAmount),
    url(r'^paycreditcardbill', views.CreditCardBillPay),
    url(r'^rechargenamematch', views.RechargeNameMatch),
    url(r'^rechargenames', views.RechargeNames),
    url(r'^lasttransactions', views.LastTransactions),
    url(r'^GetOTP', views.GetOTP),
    url(r'^VerifyOTP', views.VerifyOTP),
    url(r'^VerifyMPIN', views.VerifyMPIN),
    url(r'^get_list_of_connection', views.GetListOfConnection),
    url(r'^get_list_of_payees', views.GetListOfPayees),
    url(r'^VerifyGRID', views.VerifyGrid),
    url(r'^SendOTPTree', views.SendOTPTree),
	url(r'^paybill2', views.PayBill2),
	url(r'^savechoice2', views.SaveChoice2),
    url(r'^login_submit/$', views.LoginSubmit),
    url(r'^login/$', views.Login),
    url(r'^business_dashboard', views.GetBusinessDashboard),
    url(r'^it_dashboard', views.GetITDashboard),
    url(r'^logout', views.Logout),
    url(r'^topuplist', views.TopupList),
    url(r'^topupvalues', views.TopupValues),
    url(r'^getlambdadata', views.GetLambdaData),
    url(r'^topupactivate', views.TopupActivate),
] + static(settings.STATIC_URL, document_root = settings.STATIC_ROOT)

views.config_logger()
